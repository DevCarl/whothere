library(RMySQL) #package for communicate with MySQL database
library(ggplot2) #package for making graphs
library(GGally)
library(nlme)
library(caret) # for splitting the database
library(DAAG)#for k-fold validation on linear and logistic
library(boot)#for k-fold validation on glm
library(MuMIn)
AnalysisTable <- read.csv("C:/Users/Cometa/Desktop/ResearchPracticum/repo/whothere/dataAnalysis/AnalysisTable.csv")
View(AnalysisTable)
AnalysisTable$Survey_occupancy <- AnalysisTable$Capacity * AnalysisTable$Percentage_room_full
AnalysisTable$Factor_Time <-cut(AnalysisTable$Time, breaks = 4, right=FALSE, labels=c('Early Morning','Late Morning','Early Afternoon','Late Afternoon' ))
AnalysisTable$Course_Level <- factor(AnalysisTable$Course_Level)
AnalysisTable$Double_module <- factor(AnalysisTable$Double_module)
AnalysisTable$Class_went_ahead <- factor(AnalysisTable$Class_went_ahead)
AnalysisTable$Double_module <- factor(AnalysisTable$Double_module)
AnalysisTable$Class_went_ahead <- factor(AnalysisTable$Class_went_ahead)
null.model <- CVlm (data=AnalysisTable, m= 10, form.lm = formula (Survey_occupancy ~ 1))
lm.avg <- CVlm (data=AnalysisTable, m= 10, form.lm = formula (Survey_occupancy ~ Wifi_Average_logs))
lm.avg.room <- CVlm (data=AnalysisTable, m= 10, form.lm = formula (Survey_occupancy ~ Wifi_Average_logs + Room))
lm.avg.time <- CVlm (data=AnalysisTable, m= 10, form.lm = formula (Survey_occupancy ~ Wifi_Average_logs + Factor_Time))
lm.avg.level <- CVlm (data=AnalysisTable, m= 10, form.lm = formula (Survey_occupancy ~ Wifi_Average_logs + Course_Level))
lm.avg.room.time <- CVlm (data=AnalysisTable, m= 10, form.lm = formula (Survey_occupancy ~ Wifi_Average_logs + Room + Factor_Time))
lm.avg.room.level <- CVlm (data=AnalysisTable, m= 10, form.lm = formula (Survey_occupancy ~ Wifi_Average_logs + Room + Course_Level))
lm.avg.time.level <- CVlm (data=AnalysisTable, m= 10, form.lm = formula (Survey_occupancy ~ Wifi_Average_logs + Factor_Time + Course_Level))
lm.avg.full <- CVlm (data=AnalysisTable, m= 10, form.lm = formula (Survey_occupancy ~ Wifi_Average_logs + Room + Factor_Time + Course_Level))
#the overall mse of the null model is:
print(paste('The MSE of the model Survey_occupancy ~ 1:', attr(null.model, "ms")))
#the overall mse of the lm.avg model is:
print(paste('The MSE of the model Survey_occupancy ~ Wifi_Average_logs was:', attr(lm.avg, "ms")))
#the overall mse of the lm.avg.room model is:
print(paste('The MSE of the model Survey_occupancy ~ Wifi_Average_logs + Room was:' attr(lm.avg.room, "ms")))
#the overall mse of the lm.avg.time model is:
print(paste('The MSE of the model Survey_occupancy ~ Wifi_Average_logs + Time was:'attr(lm.avg.time, "ms")
#the overall mse of the lm.avg.level model is:
print(paste('The MSE of the model Survey_occupancy ~ Wifi_Average_logs + Course_Level was:', attr(lm.avg.level, "ms")))
#the overall mse of the lm.avg.room.time model is:
print(paste('The MSE of the model Survey_occupancy ~ Wifi_Average_logs + Room + Time was:', attr(lm.avg.room.time, "ms")))
#the overall mse of the lm.avg.room.level model is:
print(paste('The MSE of the model Survey_occupancy ~ Wifi_Average_logs+Room+level was:',attr(lm.avg.room.level, "ms")))
#the overall mse of the lm.avg.time.level model is:
print(paste('The MSE of the model Survey_occupancy ~ Wifi_Average_logs + Time + course_Levels was:',attr(lm.avg.time.level, "ms")))
#the overall mse of the avg.full model is:
print(paste('The MSE of the model Survey_occupancy ~ Wifi_Average_logs + Room + Time + Course_Level was:',attr(lm.avg.full, "ms")
print(paste('The MSE of the model Survey_occupancy ~ Wifi_Average_logs + Room + Time + Course_Level was:',attr(lm.avg.full, "ms")))
print(paste('The MSE of the model Survey_occupancy ~ Wifi_Average_logs + Room + Time + Course_Level was:', attr(lm.avg.full, "ms")))
print(paste('The MSE of the model Survey_occupancy ~ 1:', attr(null.model, "ms")))
print(paste('The MSE of the model Survey_occupancy ~ Wifi_Average_logs was:', attr(lm.avg, "ms")))
print(paste('The MSE of the model Survey_occupancy ~ Wifi_Average_logs + Room was:' attr(lm.avg.room, "ms")))
print(paste('The MSE of the model Survey_occupancy ~ Wifi_Average_logs + Time was:'attr(lm.avg.time, "ms")
print(paste('The MSE of the model Survey_occupancy ~ Wifi_Average_logs + Course_Level was:', attr(lm.avg.level, "ms")))
print(paste('The MSE of the model Survey_occupancy ~ Wifi_Average_logs + Room + Time was:', attr(lm.avg.room.time, "ms")))
print(paste('The MSE of the model Survey_occupancy ~ Wifi_Average_logs+Room+level was:',attr(lm.avg.room.level, "ms")))
print(paste('The MSE of the model Survey_occupancy ~ Wifi_Average_logs + Time + course_Levels was:',attr(lm.avg.time.level, "ms")))
print(paste('The MSE of the model Survey_occupancy ~ Wifi_Average_logs + Room + Time + Course_Level was:', attr(lm.avg.full, "ms")))
print(paste('The MSE of the model Survey_occupancy ~ 1:', attr(null.model, "ms")))
print(paste('The MSE of the model Survey_occupancy ~ Wifi_Average_logs was:', attr(lm.avg, "ms")))
print(paste('The MSE of the model Survey_occupancy ~ Wifi_Average_logs + Room was:', attr(lm.avg.room, "ms")))
print(paste('The MSE of the model Survey_occupancy ~ Wifi_Average_logs + Time was:',attr(lm.avg.time, "ms")
print(paste('The MSE of the model Survey_occupancy ~ Wifi_Average_logs + Course_Level was:', attr(lm.avg.level, "ms")))
print(paste('The MSE of the model Survey_occupancy ~ Wifi_Average_logs + Room + Time was:', attr(lm.avg.room.time, "ms")))
print(paste('The MSE of the model Survey_occupancy ~ Wifi_Average_logs+Room+level was:',attr(lm.avg.room.level, "ms")))
print(paste('The MSE of the model Survey_occupancy ~ Wifi_Average_logs + Time + course_Levels was:',attr(lm.avg.time.level, "ms")))
print(paste('The MSE of the model Survey_occupancy ~ Wifi_Average_logs + Room + Time + Course_Level was:', attr(lm.avg.full, "ms")))
print(paste('The MSE of the model Survey_occupancy ~ 1:', attr(null.model, "ms")))
print(paste('The MSE of the model Survey_occupancy ~ Wifi_Average_logs was:', attr(lm.avg, "ms")))
print(paste('The MSE of the model Survey_occupancy ~ Wifi_Average_logs + Room was:', attr(lm.avg.room, "ms")))
print(paste('The MSE of the model Survey_occupancy ~ Wifi_Average_logs + Time was:',attr(lm.avg.time, "ms")))
print(paste('The MSE of the model Survey_occupancy ~ Wifi_Average_logs + Course_Level was:', attr(lm.avg.level, "ms")))
print(paste('The MSE of the model Survey_occupancy ~ Wifi_Average_logs + Room + Time was:', attr(lm.avg.room.time, "ms")))
print(paste('The MSE of the model Survey_occupancy ~ Wifi_Average_logs+Room+level was:',attr(lm.avg.room.level, "ms")))
print(paste('The MSE of the model Survey_occupancy ~ Wifi_Average_logs + Time + course_Levels was:',attr(lm.avg.time.level, "ms")))
sqrt(343)
null.model.max <- CVlm (data=AnalysisTable, m= 10, form.lm = formula (Survey_occupancy ~ 1))
lm.max <- CVlm (data=AnalysisTable, m= 10, form.lm = formula (Survey_occupancy ~ Wifi_Max_logs))
lm.max.room <- CVlm (data=AnalysisTable, m= 10, form.lm = formula (Survey_occupancy ~ Wifi_Max_logs + Room))
lm.max.time <- CVlm (data=AnalysisTable, m= 10, form.lm = formula (Survey_occupancy ~ Wifi_Max_logs + Factor_Time))
lm.max.level <- CVlm (data=AnalysisTable, m= 10, form.lm = formula (Survey_occupancy ~ Wifi_Max_logs + Course_Level))
lm.max.room.time <- CVlm (data=AnalysisTable, m= 10, form.lm = formula (Survey_occupancy ~ Wifi_Max_logs + Room + Factor_Time))
lm.max.room.level <- CVlm (data=AnalysisTable, m= 10, form.lm = formula (Survey_occupancy ~ Wifi_Max_logs + Room + Course_Level))
lm.max.time.level <- CVlm (data=AnalysisTable, m= 10, form.lm = formula (Survey_occupancy ~ Wifi_Max_logs + Factor_Time + Course_Level))
lm.max.full <- CVlm (data=AnalysisTable, m= 10, form.lm = formula (Survey_occupancy ~ Wifi_Max_logs + Room + Factor_Time + Course_Level))
print(paste('The MSE of the model Survey_occupancy ~ 1 is:', attr(null.model, "ms")))
print(paste('The MSE of the model Survey_occupancy ~ Wifi_Max_logs is:', attr(lm.max, "ms")))
print(paste('The MSE of the model Survey_occupancy ~ Wifi_Max_logs + Room is:',attr(lm.max.room, "ms")))
print(paste('The MSE of the model Survey_occupancy ~ Wifi_Max_logs + Time is:', attr(lm.max.time, "ms")))
print(paste('The MSE of the model Survey_occupancy ~ Wifi_Max_logs + Course_Level is:', attr(lm.max.level, "ms")))
print(paste('The MSE of the model Survey_occupancy ~ Wifi_Max_logs + Room + Time is:',attr(lm.max.room.time, "ms")))
print(paste('The MSE of the model Survey_occupancy ~ Wifi_Max_logs + Room + Course_Levels is:',attr(lm.max.room.level, "ms")))
print(paste('The MSE of the model Survey_occupancy ~ Wifi_Max_logs + Room + Time is:', attr(lm.max.time.level, "ms")))
print(paste('The MSE of the model Survey_occupancy ~ Wifi_Max_logs + Room + Time + Course_level is:'attr(lm.max.full, "ms")))
print(paste('The MSE of the model Survey_occupancy ~ Wifi_Max_logs + Room + Time + Course_level is:',attr(lm.max.full, "ms")))
occupancy.lm.avg <- lm(Survey_occupancy ~ Wifi_Average_logs, data=AnalysisTable)
summary(occupancy.lm.avg)
plot(occupancy.lm.avg)
NoOutlierTable <- AnalysisTable[ AnalysisTable$Wifi_Max_logs < 140,]
NoOutlierTable <- NoOutlierTable[ NoOutlierTable$Survey_occupancy < 120,]
dim(NoOutlierTable) #only 3 observations were dropped, so we did not lose to much data
AnalysisTable <- read.csv("C:/Users/Cometa/Desktop/ResearchPracticum/repo/whothere/dataAnalysis/AnalysisTable.csv")
View(AnalysisTable)
library(RMySQL) #package for communicate with MySQL database
library(ggplot2) #package for making graphs
library(GGally)
library(nlme)
library(caret) # for splitting the database
library(DAAG)#for k-fold validation on linear and logistic
library(boot)#for k-fold validation on glm
library(MuMIn)
AnalysisTable$Survey_occupancy <- AnalysisTable$Capacity * AnalysisTable$Percentage_room_full
#bin time into a categorical variable for checking time of the day
AnalysisTable$Factor_Time <-cut(AnalysisTable$Time, breaks = 4, right=FALSE, labels=c('Early Morning','Late Morning','Early Afternoon','Late Afternoon' ))
#get general information on the dataset, head, tail and type of variables
str(AnalysisTable)
#specifiy as factor: Module, Course_levels, Tutorial, Double Module and Class went ahead
AnalysisTable$Room <- as.factor(AnalysisTable$Room)
AnalysisTable$Course_Level <- as.factor(AnalysisTable$Course_Level)
AnalysisTable$Tutorial <- as.factor(AnalysisTable$Tutorial)
AnalysisTable$Double_module <- as.factor(AnalysisTable$Double_module)
AnalysisTable$Class_went_ahead <- as.factor(AnalysisTable$Class_went_ahead)
NoOutlierTable <- AnalysisTable[ AnalysisTable$Wifi_Max_logs < 150,]
NoOutlierTable <- NoOutlierTable[ NoOutlierTable$Survey_occupancy < 120,]
out.null.model <- CVlm (data=NoOutlierTable, m= 10, form.lm = formula (Survey_occupancy ~ 1))
out.lm.avg <- CVlm (data=NoOutlierTable, m= 10, form.lm = formula (Survey_occupancy ~ Wifi_Average_logs))
out.lm.avg.room <- CVlm (data=NoOutlierTable, m= 10, form.lm = formula (Survey_occupancy ~ Wifi_Average_logs + Room))
out.lm.avg.time <- CVlm (data=NoOutlierTable, m= 10, form.lm = formula (Survey_occupancy ~ Wifi_Average_logs + Factor_Time))
out.lm.avg.level <- CVlm (data=NoOutlierTable, m= 10, form.lm = formula (Survey_occupancy ~ Wifi_Average_logs + Course_Level))
out.lm.avg.room.time <- CVlm (data=NoOutlierTable, m= 10, form.lm = formula (Survey_occupancy ~ Wifi_Average_logs + Room + Factor_Time))
out.lm.avg.room.level <- CVlm (data=NoOutlierTable, m= 10, form.lm = formula (Survey_occupancy ~ Wifi_Average_logs + Room + Course_Level))
out.lm.avg.time.level <- CVlm (data=NoOutlierTable, m= 10, form.lm = formula (Survey_occupancy ~ Wifi_Average_logs + Factor_Time + Course_Level))
out.lm.avg.full <- CVlm (data=NoOutlierTable, m= 10, form.lm = formula (Survey_occupancy ~ Wifi_Average_logs + Room + Factor_Time + Course_Level))
print(paste ( 'The MSE of the Survey_occupancy ~ 1  model (null model) is:', attr(out.null.model, "ms")))
print(paste ( 'The MSE of the Survey_occupancy ~ Wifi_Average_logs model is:', attr(out.lm.avg, "ms")))
print(paste ( 'The MSE of the Survey_occupancy ~ Wifi_Average_logs + Room model is:', attr(out.lm.avg.room, "ms")))
print(paste ( 'The MSE of the Survey_occupancy ~ Wifi_Average_logs + Time model is:', attr(out.lm.avg.time, "ms")))
print(paste ( 'The MSE of the Survey_occupancy ~ Wifi_Average_logs + Course Level model is:', attr(out.lm.avg.level, "ms")))
print(paste ( 'The MSE of the Survey_occupancy ~ Wifi_Average_logs + Room + Time model is:', attr(out.lm.avg.room.time, "ms")))
print(paste ( 'The MSE of the Survey_occupancy ~ Wifi_Average_logs + Room + Course Level model is:', attr(out.lm.avg.room.level, "ms")))
print(paste ( 'The MSE of the Survey_occupancy ~ Wifi_Average_logs + Room + Course Level model is:', attr(out.lm.avg.time.level, "ms")))
print(paste ( 'The MSE of the Survey_occupancy ~ Wifi_Average_logs + Room + Course Level model is:', attr(out.lm.avg.full, "ms")))
#MSE FOR ALL THE MODELS
print(paste ( 'The MSE of the Survey_occupancy ~ 1  model (null model) is:', attr(out.null.model, "ms")))
print(paste ( 'The MSE of the Survey_occupancy ~ Wifi_Average_logs model is:', attr(out.lm.avg, "ms")))
print(paste ( 'The MSE of the Survey_occupancy ~ Wifi_Average_logs + Room model is:', attr(out.lm.avg.room, "ms")))
print(paste ( 'The MSE of the Survey_occupancy ~ Wifi_Average_logs + Time model is:', attr(out.lm.avg.time, "ms")))
print(paste ( 'The MSE of the Survey_occupancy ~ Wifi_Average_logs + Course Level model is:', attr(out.lm.avg.level, "ms")))
print(paste ( 'The MSE of the Survey_occupancy ~ Wifi_Average_logs + Room + Time model is:', attr(out.lm.avg.room.time, "ms")))
print(paste ( 'The MSE of the Survey_occupancy ~ Wifi_Average_logs + Room + Course Level model is:', attr(out.lm.avg.room.level, "ms")))
print(paste ( 'The MSE of the Survey_occupancy ~ Wifi_Average_logs + Room + Course Level model is:', attr(out.lm.avg.time.level, "ms")))
print(paste ( 'The MSE of the Survey_occupancy ~ Wifi_Average_logs + Room + Course Level model is:', attr(out.lm.avg.full, "ms")))
out.lm.max <- CVlm (data=NoOutlierTable, m= 10, form.lm = formula (Survey_occupancy ~ Wifi_Max_logs))
out.lm.max.room <- CVlm (data=NoOutlierTable, m= 10, form.lm = formula (Survey_occupancy ~ Wifi_Max_logs + Room))
out.lm.max.time <- CVlm (data=NoOutlierTable, m= 10, form.lm = formula (Survey_occupancy ~ Wifi_Max_logs + Factor_Time))
out.lm.max.level <- CVlm (data=NoOutlierTable, m= 10, form.lm = formula (Survey_occupancy ~ Wifi_Max_logs + Course_Level))
out.lm.max.room.time <- CVlm (data=NoOutlierTable, m= 10, form.lm = formula (Survey_occupancy ~ Wifi_Max_logs + Room + Factor_Time))
out.lm.max.room.level <- CVlm (data=NoOutlierTable, m= 10, form.lm = formula (Survey_occupancy ~ Wifi_Max_logs + Room + Course_Level))
out.lm.max.time.level <- CVlm (data=NoOutlierTable, m= 10, form.lm = formula (Survey_occupancy ~ Wifi_Max_logs + Factor_Time + Course_Level))
out.lm.max.full <- CVlm (data=NoOutlierTable, m= 10, form.lm = formula (Survey_occupancy ~ Wifi_Max_logs + Room + Factor_Time + Course_Level))
print(paste ( 'The MSE of the Survey_occupancy ~ 1  model (null model) is:', attr(out.null.model, "ms")))
print(paste ( 'The MSE of the Survey_occupancy ~ Wifi_Max_logs model is:', attr(out.lm.max, "ms")))
print(paste ( 'The MSE of the Survey_occupancy ~ Wifi_Max_logs + Room model is:', attr(out.lm.max.room, "ms")))
print(paste ( 'The MSE of the Survey_occupancy ~ Wifi_Max_logs + Time model is:', attr(out.lm.max.time, "ms")))
print(paste ( 'The MSE of the Survey_occupancy ~ Wifi_Max_logs + Course Level model is:', attr(out.lm.max.level, "ms")))
print(paste ( 'The MSE of the Survey_occupancy ~ Wifi_Max_logs + Room + Time model is:', attr(out.lm.max.room.time, "ms")))
print(paste ( 'The MSE of the Survey_occupancy ~ Wifi_Max_logs + Room + Course Level model is:', attr(out.lm.max.room.level, "ms")))
print(paste ( 'The MSE of the Survey_occupancy ~ Wifi_Max_logs + Room + Course Level model is:', attr(out.lm.max.time.level, "ms")))
print(paste ( 'The MSE of the Survey_occupancy ~ Wifi_Max_logs + Room + Course Level model is:', attr(out.lm.max.full, "ms")))
out.occupancy.lm.avg <- lm(Survey_occupancy ~ Wifi_Average_logs, data=NoOutlierTable)
plot(occupancy.lm.avg)
plot(out.occupancy.lm.avg)
set.seed(1)
out.avg.null <- glm(Survey_occupancy ~ 1, family = quasipoisson, data=NoOutlierTable)
#k-fold cross validation
out.poisson.avg.null <- cv.glm (data=NoOutlierTable, glmfit=out.avg.null, K=10)
out.avg <- glm(Survey_occupancy ~ Wifi_Average_logs, family = quasipoisson, data=NoOutlierTable)
#k-fold cross validation
out.poisson.avg <- cv.glm (data=NoOutlierTable, glmfit=out.avg, K=10)
out.avg.room <- glm(Survey_occupancy ~Wifi_Average_logs + Room, family = quasipoisson, data=NoOutlierTable)
#k-fold cross validation
out.poisson.avg.room <- cv.glm (data=NoOutlierTable, glmfit=out.avg.room, K=10)
out.avg.time <- glm(Survey_occupancy ~ Wifi_Average_logs + Factor_Time, family = quasipoisson, data=NoOutlierTable)
#k-fold cross validation
out.poisson.avg.time <- cv.glm (data=NoOutlierTable, glmfit=out.avg.time, K=10)
out.avg.level <- glm(Survey_occupancy ~ Wifi_Average_logs + Course_Level, family = quasipoisson, data=NoOutlierTable)
#k-fold cross validation
out.poisson.avg.level <- cv.glm (data=NoOutlierTable, glmfit=out.avg.level, K=10)
out.avg.room.time <- glm(Survey_occupancy ~ Wifi_Average_logs + Room + Factor_Time, family = quasipoisson, data=NoOutlierTable)
#k-fold cross validation
out.poisson.avg.room.time <- cv.glm (data=NoOutlierTable, glmfit=out.avg.room.time, K=10)
out.avg.room.level <- glm(Survey_occupancy ~ Wifi_Average_logs + Room + Course_Level, family = quasipoisson, data=NoOutlierTable)
#k-fold cross validation
out.poisson.avg.room.level <- cv.glm (data=NoOutlierTable, glmfit=out.avg.room.level, K=10)
out.avg.time.level <- glm(Survey_occupancy ~ Wifi_Average_logs + Factor_Time + Course_Level, family = quasipoisson, data=NoOutlierTable)
#k-fold cross validation
out.poisson.avg.time.level <- cv.glm (data=NoOutlierTable, glmfit=out.avg.time.level, K=10)
out.avg.full <- glm(Survey_occupancy ~ Wifi_Average_logs + Room + Factor_Time + Course_Level, family = quasipoisson, data=NoOutlierTable)
out.poisson.avg.full <- cv.glm (data=NoOutlierTable, glmfit=out.avg.full, K=10)
out.poisson.avg.null$delta
#the raw cross-validation estimate of prediction error and the adjusted one of the poisson.max model is:
out.poisson.avg$delta
#the raw cross-validation estimate of prediction error and the adjusted one of the poisson.max.room model is:
out.poisson.avg.room$delta
#the raw cross-validation estimate of prediction error and the adjusted one of the poisson.max.time model is:
out.poisson.avg.time$delta
#the raw cross-validation estimate of prediction error and the adjusted one of the poisson.max.level model is:
out.poisson.avg.level$delta
#the raw cross-validation estimate of prediction error and the adjusted one of the poisson.max.room.time model is:
out.poisson.avg.room.time$delta
#the raw cross-validation estimate of prediction error and the adjusted one of the poisson.max.room.level model is:
out.poisson.avg.room.level$delta
#the raw cross-validation estimate of prediction error and the adjusted one of the poisson.max.time.level model is:
out.poisson.avg.time.level$delta
#the raw cross-validation estimate of prediction error and the adjusted one of the poisson.max.full model is:
out.poisson.avg.full$delta
out.poisson.avg.full$delta[2]
